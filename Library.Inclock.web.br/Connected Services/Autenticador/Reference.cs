//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.Inclock.web.br.Autenticador {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckPoint.BasicInformations", Namespace="http://schemas.datacontract.org/2004/07/Autenticador.BL")]
    [System.SerializableAttribute()]
    public partial class CheckPointBasicInformations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.Inclock.web.br.Autenticador.CheckPointBasicInformations.Informacao[] InformacoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Classes.VO.Ponto[] PontosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.Inclock.web.br.Autenticador.CheckPointBasicInformations.Informacao[] Informacoes {
            get {
                return this.InformacoesField;
            }
            set {
                if ((object.ReferenceEquals(this.InformacoesField, value) != true)) {
                    this.InformacoesField = value;
                    this.RaisePropertyChanged("Informacoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Classes.VO.Ponto[] Pontos {
            get {
                return this.PontosField;
            }
            set {
                if ((object.ReferenceEquals(this.PontosField, value) != true)) {
                    this.PontosField = value;
                    this.RaisePropertyChanged("Pontos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CheckPoint.BasicInformations.Informacao", Namespace="http://schemas.datacontract.org/2004/07/Autenticador.BL")]
        [System.SerializableAttribute()]
        public partial class Informacao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int FuncionarioField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long QtdeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TipoField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int Funcionario {
                get {
                    return this.FuncionarioField;
                }
                set {
                    if ((this.FuncionarioField.Equals(value) != true)) {
                        this.FuncionarioField = value;
                        this.RaisePropertyChanged("Funcionario");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long Qtde {
                get {
                    return this.QtdeField;
                }
                set {
                    if ((this.QtdeField.Equals(value) != true)) {
                        this.QtdeField = value;
                        this.RaisePropertyChanged("Qtde");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Tipo {
                get {
                    return this.TipoField;
                }
                set {
                    if ((object.ReferenceEquals(this.TipoField, value) != true)) {
                        this.TipoField = value;
                        this.RaisePropertyChanged("Tipo");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Autenticador.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOptions", ReplyAction="http://tempuri.org/IService/GetOptionsResponse")]
        void GetOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOptions", ReplyAction="http://tempuri.org/IService/GetOptionsResponse")]
        System.Threading.Tasks.Task GetOptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Logar", ReplyAction="http://tempuri.org/IService/LogarResponse")]
        Classes.VO.Funcionario Logar(string password, string login, string dispositivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Logar", ReplyAction="http://tempuri.org/IService/LogarResponse")]
        System.Threading.Tasks.Task<Classes.VO.Funcionario> LogarAsync(string password, string login, string dispositivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ApagarSessao", ReplyAction="http://tempuri.org/IService/ApagarSessaoResponse")]
        void ApagarSessao(int func, string dispositivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ApagarSessao", ReplyAction="http://tempuri.org/IService/ApagarSessaoResponse")]
        System.Threading.Tasks.Task ApagarSessaoAsync(int func, string dispositivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendAccount", ReplyAction="http://tempuri.org/IService/SendAccountResponse")]
        Classes.VO.FeedBack SendAccount(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendAccount", ReplyAction="http://tempuri.org/IService/SendAccountResponse")]
        System.Threading.Tasks.Task<Classes.VO.FeedBack> SendAccountAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPassword", ReplyAction="http://tempuri.org/IService/GetPasswordResponse")]
        string GetPassword(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPassword", ReplyAction="http://tempuri.org/IService/GetPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPasswordAsync(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserById", ReplyAction="http://tempuri.org/IService/GetUserByIdResponse")]
        Classes.VO.Funcionario GetUserById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserById", ReplyAction="http://tempuri.org/IService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<Classes.VO.Funcionario> GetUserByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckPoint", ReplyAction="http://tempuri.org/IService/CheckPointResponse")]
        Classes.VO.FeedBack CheckPoint(string funcionario, string type, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckPoint", ReplyAction="http://tempuri.org/IService/CheckPointResponse")]
        System.Threading.Tasks.Task<Classes.VO.FeedBack> CheckPointAsync(string funcionario, string type, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExpediente", ReplyAction="http://tempuri.org/IService/GetExpedienteResponse")]
        Classes.VO.Expediente[] GetExpediente(string semana, string funcionario_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExpediente", ReplyAction="http://tempuri.org/IService/GetExpedienteResponse")]
        System.Threading.Tasks.Task<Classes.VO.Expediente[]> GetExpedienteAsync(string semana, string funcionario_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvisos", ReplyAction="http://tempuri.org/IService/GetAvisosResponse")]
        Classes.VO.Aviso[] GetAvisos(string qtde, string index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvisos", ReplyAction="http://tempuri.org/IService/GetAvisosResponse")]
        System.Threading.Tasks.Task<Classes.VO.Aviso[]> GetAvisosAsync(string qtde, string index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckPointDateInterval", ReplyAction="http://tempuri.org/IService/GetCheckPointDateIntervalResponse")]
        Classes.VO.Ponto[] GetCheckPointDateInterval(string InitialDate, string FinalDate, string funcionario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckPointDateInterval", ReplyAction="http://tempuri.org/IService/GetCheckPointDateIntervalResponse")]
        System.Threading.Tasks.Task<Classes.VO.Ponto[]> GetCheckPointDateIntervalAsync(string InitialDate, string FinalDate, string funcionario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBasicInformations", ReplyAction="http://tempuri.org/IService/GetBasicInformationsResponse")]
        Library.Inclock.web.br.Autenticador.CheckPointBasicInformations GetBasicInformations(string InitialDate, string FinalDate, string funcionario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBasicInformations", ReplyAction="http://tempuri.org/IService/GetBasicInformationsResponse")]
        System.Threading.Tasks.Task<Library.Inclock.web.br.Autenticador.CheckPointBasicInformations> GetBasicInformationsAsync(string InitialDate, string FinalDate, string funcionario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckPointById", ReplyAction="http://tempuri.org/IService/GetCheckPointByIdResponse")]
        Classes.VO.Ponto GetCheckPointById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckPointById", ReplyAction="http://tempuri.org/IService/GetCheckPointByIdResponse")]
        System.Threading.Tasks.Task<Classes.VO.Ponto> GetCheckPointByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConvertePeriodo", ReplyAction="http://tempuri.org/IService/ConvertePeriodoResponse")]
        int ConvertePeriodo(string hora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConvertePeriodo", ReplyAction="http://tempuri.org/IService/ConvertePeriodoResponse")]
        System.Threading.Tasks.Task<int> ConvertePeriodoAsync(string hora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ExcluirExpediente", ReplyAction="http://tempuri.org/IService/ExcluirExpedienteResponse")]
        Classes.VO.FeedBack ExcluirExpediente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ExcluirExpediente", ReplyAction="http://tempuri.org/IService/ExcluirExpedienteResponse")]
        System.Threading.Tasks.Task<Classes.VO.FeedBack> ExcluirExpedienteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CadastrarExpediente", ReplyAction="http://tempuri.org/IService/CadastrarExpedienteResponse")]
        Classes.VO.FeedBack CadastrarExpediente(Classes.VO.Expediente exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CadastrarExpediente", ReplyAction="http://tempuri.org/IService/CadastrarExpedienteResponse")]
        System.Threading.Tasks.Task<Classes.VO.FeedBack> CadastrarExpedienteAsync(Classes.VO.Expediente exp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Library.Inclock.web.br.Autenticador.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Library.Inclock.web.br.Autenticador.IService>, Library.Inclock.web.br.Autenticador.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GetOptions() {
            base.Channel.GetOptions();
        }
        
        public System.Threading.Tasks.Task GetOptionsAsync() {
            return base.Channel.GetOptionsAsync();
        }
        
        public Classes.VO.Funcionario Logar(string password, string login, string dispositivo) {
            return base.Channel.Logar(password, login, dispositivo);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.Funcionario> LogarAsync(string password, string login, string dispositivo) {
            return base.Channel.LogarAsync(password, login, dispositivo);
        }
        
        public void ApagarSessao(int func, string dispositivo) {
            base.Channel.ApagarSessao(func, dispositivo);
        }
        
        public System.Threading.Tasks.Task ApagarSessaoAsync(int func, string dispositivo) {
            return base.Channel.ApagarSessaoAsync(func, dispositivo);
        }
        
        public Classes.VO.FeedBack SendAccount(string Email) {
            return base.Channel.SendAccount(Email);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.FeedBack> SendAccountAsync(string Email) {
            return base.Channel.SendAccountAsync(Email);
        }
        
        public string GetPassword(string Login) {
            return base.Channel.GetPassword(Login);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordAsync(string Login) {
            return base.Channel.GetPasswordAsync(Login);
        }
        
        public Classes.VO.Funcionario GetUserById(string id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.Funcionario> GetUserByIdAsync(string id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public Classes.VO.FeedBack CheckPoint(string funcionario, string type, string code) {
            return base.Channel.CheckPoint(funcionario, type, code);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.FeedBack> CheckPointAsync(string funcionario, string type, string code) {
            return base.Channel.CheckPointAsync(funcionario, type, code);
        }
        
        public Classes.VO.Expediente[] GetExpediente(string semana, string funcionario_Id) {
            return base.Channel.GetExpediente(semana, funcionario_Id);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.Expediente[]> GetExpedienteAsync(string semana, string funcionario_Id) {
            return base.Channel.GetExpedienteAsync(semana, funcionario_Id);
        }
        
        public Classes.VO.Aviso[] GetAvisos(string qtde, string index) {
            return base.Channel.GetAvisos(qtde, index);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.Aviso[]> GetAvisosAsync(string qtde, string index) {
            return base.Channel.GetAvisosAsync(qtde, index);
        }
        
        public Classes.VO.Ponto[] GetCheckPointDateInterval(string InitialDate, string FinalDate, string funcionario) {
            return base.Channel.GetCheckPointDateInterval(InitialDate, FinalDate, funcionario);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.Ponto[]> GetCheckPointDateIntervalAsync(string InitialDate, string FinalDate, string funcionario) {
            return base.Channel.GetCheckPointDateIntervalAsync(InitialDate, FinalDate, funcionario);
        }
        
        public Library.Inclock.web.br.Autenticador.CheckPointBasicInformations GetBasicInformations(string InitialDate, string FinalDate, string funcionario) {
            return base.Channel.GetBasicInformations(InitialDate, FinalDate, funcionario);
        }
        
        public System.Threading.Tasks.Task<Library.Inclock.web.br.Autenticador.CheckPointBasicInformations> GetBasicInformationsAsync(string InitialDate, string FinalDate, string funcionario) {
            return base.Channel.GetBasicInformationsAsync(InitialDate, FinalDate, funcionario);
        }
        
        public Classes.VO.Ponto GetCheckPointById(string id) {
            return base.Channel.GetCheckPointById(id);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.Ponto> GetCheckPointByIdAsync(string id) {
            return base.Channel.GetCheckPointByIdAsync(id);
        }
        
        public int ConvertePeriodo(string hora) {
            return base.Channel.ConvertePeriodo(hora);
        }
        
        public System.Threading.Tasks.Task<int> ConvertePeriodoAsync(string hora) {
            return base.Channel.ConvertePeriodoAsync(hora);
        }
        
        public Classes.VO.FeedBack ExcluirExpediente(int id) {
            return base.Channel.ExcluirExpediente(id);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.FeedBack> ExcluirExpedienteAsync(int id) {
            return base.Channel.ExcluirExpedienteAsync(id);
        }
        
        public Classes.VO.FeedBack CadastrarExpediente(Classes.VO.Expediente exp) {
            return base.Channel.CadastrarExpediente(exp);
        }
        
        public System.Threading.Tasks.Task<Classes.VO.FeedBack> CadastrarExpedienteAsync(Classes.VO.Expediente exp) {
            return base.Channel.CadastrarExpedienteAsync(exp);
        }
    }
}
